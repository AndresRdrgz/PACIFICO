# Generated by Django 5.1.3 on 2025-07-25 02:58
# Modified to handle existing 'empresa' column

from django.db import migrations, models, connection


def check_column_exists(table_name, column_name):
    """Check if a column exists in a table using SQLite-compatible syntax."""
    with connection.cursor() as cursor:
        # SQLite syntax to check if column exists
        cursor.execute(f"PRAGMA table_info({table_name})")
        columns = cursor.fetchall()
        column_names = [column[1] for column in columns]  # column[1] is the column name
        return column_name in column_names


def add_empresa_field_if_not_exists(apps, schema_editor):
    """Add empresa field only if it doesn't exist."""
    if not check_column_exists('workflow_clienteentrevista', 'empresa'):
        # If column doesn't exist, create it
        ClienteEntrevista = apps.get_model('workflow', 'ClienteEntrevista')
        with schema_editor.connection.cursor() as cursor:
            cursor.execute("""
                ALTER TABLE workflow_clienteentrevista 
                ADD COLUMN empresa VARCHAR(100) NULL
            """)
        print("‚úÖ Added 'empresa' column to workflow_clienteentrevista table")
    else:
        print("‚ÑπÔ∏è  Column 'empresa' already exists in workflow_clienteentrevista table - skipping")


def reverse_add_empresa_field(apps, schema_editor):
    """Remove empresa field if it exists."""
    if check_column_exists('workflow_clienteentrevista', 'empresa'):
        with schema_editor.connection.cursor() as cursor:
            cursor.execute("ALTER TABLE workflow_clienteentrevista DROP COLUMN empresa")
        print("üóëÔ∏è  Removed 'empresa' column from workflow_clienteentrevista table")


class Migration(migrations.Migration):

    dependencies = [
        ('workflow', '0030_delete_reportebackoffice'),
    ]

    operations = [
        migrations.RunPython(
            add_empresa_field_if_not_exists,
            reverse_add_empresa_field,
        ),
    ]
